pool:
  vmImage: 'windows-latest'
  
trigger:
- master
- develop

steps:
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '5.0.100'
    includePreviewVersions: false
- task: CmdLine@2
  inputs:
    script: |
        cd hjudge.Exec.Windows
        mkdir x64
        cd x64
        mkdir Release
        cd ../../hjudge.Exec.Linux
        mkdir target
        cd target
        mkdir release
        cd ../..
- task: CmdLine@2
  inputs:
    script: |
        fake run build.fsx -t Build
- task: CmdLine@2
  inputs:
    script: |
        fake run build.fsx -t Test
- task: ArchiveFiles@2
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    rootFolderOrFile: 'hjudge.JudgeHost/src/bin/Release/netcoreapp3.1/publish'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/hjudge.JudgeHost.zip'
    replaceExistingArchive: true
- task: ArchiveFiles@2
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    rootFolderOrFile: 'hjudge.FileHost/src/bin/Release/netcoreapp3.1/publish'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/hjudge.FileHost.zip'
    replaceExistingArchive: true
- task: ArchiveFiles@2
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    rootFolderOrFile: 'hjudge.WebHost/src/bin/Release/netcoreapp3.1/publish'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/hjudge.WebHost.zip'
    replaceExistingArchive: true
- task: ArchiveFiles@2
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    rootFolderOrFile: 'hjudge.Exec.Windows/x64/Release'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/hjudge.Exec.Windows.zip'
    replaceExistingArchive: true
# - task: ArchiveFiles@2
#   condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
#   inputs:
#     rootFolderOrFile: 'hjudge.Exec.Linux/target/release'
#     includeRootFolder: false
#     archiveType: 'zip'
#     archiveFile: '$(Build.ArtifactStagingDirectory)/hjudge.Exec.Linux.zip'
#     replaceExistingArchive: true
- task: PublishPipelineArtifact@1
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'hjudge_artifacts_$(Build.BuildId)'
